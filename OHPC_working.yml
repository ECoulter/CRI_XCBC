
---
 - hosts: headnode
   tasks: 


   - name: install necessary stuff
     yum: name={{ item }} state=latest
     with_items:
       - "epel-release"
       - "wget" 
       - "tcpdump"
       - "whois" 
       - "lsof" 
       - "xinetd"
       - "vim" 
       - "net-tools"
       - "exportfs" 
       - "firewalld"
       - "pciutils"
       - "ntp"
 
   - name: install fail2ban # separate b/c it's in epel
     yum: name=fail2ban state=latest 

   - name: set up internal NIC to static, ip  10.1.1.1, netmask 255.255.255.0, boot=on
     lineinfile: line={{ item.line }} dest=/etc/sysconfig/network-scripts/ifcfg-{{ private_interface }} state=present regexp={{ item.regex }}
     with_items:
       - { line: 'IPADDR=10.1.1.1', regex: '^IPADDR=' }
       - { line: 'BOOTPROTO=static', regex: '^BOOTPROTO=' }
       - { line: 'NETMASK=255.255.255.0', regex: '^NETMASK=' }
       - { line: 'GATEWAY=10.1.1.254', regex: '^GATEWAY=' }
       - { line: 'ONBOOT=yes', regex: '^ONBOOT=' }

   - name: make sure outside network comes up on boot
     lineinfile: line='ONBOOT=yes' dest=/etc/sysconfig/network-scripts/ifcfg-{{ public_interface }} state=present regexp='^ONBOOT='

   - name: get OpenHPC Repo #hardcoded version # :(
     get_url: url=http://build.openhpc.community/OpenHPC:/1.0/CentOS_7.1/OpenHPC:1.0.repo dest=/etc/yum.repos.d/

   - template: src=firewall_conf/firewalld.conf dest=/etc/firewalld/firewalld.conf
   - template: src=firewall_conf/zones/internal.xml dest=/etc/firewalld/zones/internal.xml
   - template: src=firewall_conf/zones/public.xml dest=/etc/firewalld/zones/public.xml
 
   - name: add interfaces to internal zone firewalld
     lineinfile: dest=/etc/sysconfig/network-scripts/ifcfg-{{ private_interface }} regexp=^ZONE= line=ZONE=internal

   - name: add interfaces to external zone firewalld
     lineinfile: dest=/etc/sysconfig/network-scripts/ifcfg-{{ public_interface }} regexp=^ZONE= line=ZONE=public

#   - name: restart dbus for firewalld :(
#     service: name=dbus state=restarted

#   - name: firewalld restart
#     service: name=firewalld state=restarted

#   - name: reload network
#     service: name=network state=restarted

   - name: nmcli reload since NM can't handle zones... 
     command: nmcli con reload

   - name: config ntp
     lineinfile: 
       dest: /etc/ntp.conf    
       regexp: "{{ item.regex }}" 
       line: "{{ item.line }}" 
     with_items:
       - { regex: '^server 0', line: 'server 0.pool.ntp.org' }
       - { regex: '^server 1', line: 'server 1.pool.ntp.org' }
       - { regex: '^server 2', line: 'server 2.pool.ntp.org' }
       - { regex: '^server 3', line: 'server 3.pool.ntp.org' }

   - name: enable ntpd
     service: name=ntpd state=restarted

   - name: install OpenHPC base
     yum: name="@ohpc-base" state=present

   - name: install OpenHPC warewulf
     yum: name="@ohpc-warewulf" state=present

   - name: install OpenHPC base
     yum: name="@ohpc-slurm-server" state=present

   - name: add slurm user
     user: name=slurm state=present system=yes

   - name: config warewulf interface
     lineinfile: dest=/etc/warewulf/provision.conf regexp="network device =" line="network device = {{ private_interface }}" 
#" for vim

   - name: enable tftp
     lineinfile: dest=/etc/xinetd.d/tftp regexp="^(\s+)disable(\s+)= yes" line="\1disable\2= no" backrefs=yes

   - name: yum update
     yum: name=* state=latest update_cache=yes

   - name: config warewulf http
     lineinfile: 
       dest: /etc/httpd/conf.d/warewulf-httpd.conf
       regexp: "{{ item.regex }}" 
       line: "{{ item.line }}" 
       state: "{{ item.state }}"
       backrefs: yes
     with_items:
       - { regex: '^(.*)cgi-bin>$', line: '\1cgi-bin> \n    Require all granted', state: present}
       - { regex: '(\s+)Allow from all', line: '\1Require all granted', state: present }
       - { regex: 'Order allow,deny', line: "", state: absent }
     
   - name: ensure internal interface is up on 10.1.1.1 netmask 255.255.255.0
     command: ifconfig "{{ private_interface }}" 10.1.1.1 netmask 255.255.255.0 up

   - name: reload xinetd
     service: name=xinetd state=restarted
 
   - name: enable mariadb
     service: name=mariadb enabled=yes
  
   - name: restart mariadb
     service: name=mariadb state=restarted

   - name: enable httpd
     service: name=httpd enabled=yes
  
   - name: restart httpdd
     service: name=httpd state=restarted

   - name: fix broken wwmkchroot file
     lineinfile: 
       dest: /usr/libexec/warewulf/wwmkchroot/centos-7.tmpl 
       regexp: "^YUM_MIRROR(.*)7.1.1503(.*)"
       line: 'YUM_MIRROR\g<1>7\g<2>'   # use \g<1> for backref followed by digit!
       backrefs: yes

   - name: make chroot
     command: wwmkchroot centos-7 "{{ chroot_loc }}"

   - name: copy resolve.conf into image
     copy: src=/etc/resolv.conf dest="{{ chroot_loc }}/etc/resolv.conf" #"

   - name: yum install into the image chroot
     command: yum -y --installroot={{ chroot_loc }} install ntp kernel lmod-ohpc 
#" for vim


   - name: yum install slurm client into image
     command: yum -y --installroot={{ chroot_loc }} groupinstall ohpc-slurm-client
#" for vim

   - name: cluster ssh keys
     command: wwinit ssh_keys
     args:
       chdir: /root/

   - name: copy ssh keys over
     copy: src=/root/.ssh/cluster.pub dest={{ chroot_loc }}/root/.ssh/authorized_keys

   - name: put NFS home mount info in image
     lineinfile: line="10.1.1.1:/home /home nfs nfsvers=3,rsize=1024,wsize=1024,cto 0 0" dest={{ chroot_loc }}/etc/fstab state=present

   - name: put NFS opt mount info in image
     lineinfile: line="10.1.1.1:/opt/ohpc/pub /opt/ohpc/pub nfs nfsvers=3 0 0" dest={{ chroot_loc }}/etc/fstab state=present

   - name: slurm control machine
     lineinfile: regexp="^ControlMachine=\S+" line="ControlMachine=10.1.1.1" dest=/etc/slurm/slurm.conf 
   - name: exportfs home entry on headnode
     lineinfile: line="/home *(rw,no_subtree_check,fsid=10,no_root_squash)" dest=/etc/exports state=present

   - name: exportfs opt entry on headnode
     lineinfile: line="/opt/ohpc/pub *(ro,no_subtree_check,fsid=11)" dest=/etc/exports state=present

   - name: exportfs reload
     command: exportfs -a

   - name: restart rpcbind
     service: name=rpcbind state=restarted enabled=yes
 
   - name: restart nfs-server
     service: name=nfs-server state=restarted enabled=yes

   - name: ntp on compute image enabled 
     command: chroot '{{ chroot_loc }}' systemctl enable ntpd

   - name: add headnode to compute ntp.conf
     lineinfile: line="server 10.1.1.1" dest={{ chroot_loc }}/etc/ntp.conf state=present

   - name: fix the warewulf wwsh script... ARGH (line 29)
     lineinfile: 
       dest: /bin/wwsh
       insertafter: '^\$ENV\{\"PATH\"\}'
       line: "delete @ENV{'PATH', 'IFS', 'CDPATH', 'ENV', 'BASH_ENV'};"
       state: present

   - name: fix the warewulf wwnodescan script... ARGH (line 96)
     lineinfile: 
       dest: /bin/wwnodescan
       insertafter: '^\$ENV\{\"PATH\"\}'
       line: "delete @ENV{'PATH', 'IFS', 'CDPATH', 'ENV', 'BASH_ENV'};"
       state: present

   - name: wwimport file into image (passwd)
     command: wwsh file import /etc/passwd

   - name: wwimport file into image (group)
     command: wwsh file import /etc/group

   - name: wwimport file into image (shadow)
     command: wwsh file import /etc/shadow

   - name: wwimport file into image (slurm)
     command: wwsh file import /etc/slurm/slurm.conf

   - name: wwimport file into image (munge)
     command: wwsh file import /etc/munge/munge.key

   - name: build bootstrap image
     shell: wwbootstrap `uname -r`

   - name: build the vnfs 
     command: wwvnfs -y --chroot "{{ chroot_loc }}/"

   - name: set up provisioning interface
     lineinfile: line="GATEWAYDEV={{ private_interface }}" dest=/tmp/network.ww create=yes
#" for vim
   - name: add network file to import
     command: wwsh -y file import /tmp/network.ww --name network

   - name: set network file path
     command: wwsh -y file set network --path /etc/sysconfig/network --mode=0644 --uid=0

   - template: src=dhcpd.conf dest=/etc/dhcp/dhcpd.conf
   
   - name: restart dhcpd
     service: name=dhcpd state=restarted enabled=yes

   - name: wwnodescan THIS IS IT
     shell: wwnodescan --ip=10.1.1.2 --netdev={{ private_interface }} --netmask=255.255.255.0 --bootstrap=`uname -r` --vnfs=centos7.1 comp{0..{{ num_nodes|int - 1 }}}

   vars_prompt:
    - name: "public_interface"
      prompt: "Enter the public network interface name (default is enp0s3):"
      private: no
      default: "enp0s3"
    - name: "private_interface"
      prompt: "Enter the private network interface (default is enp0s8):"
      private: no
      default: "enp0s8"
    - name: "num_nodes"
      prompt: "How many compute nodes do you have?"
      private: no
      default: 0

   vars:
     chroot_loc: "/opt/ohpc/admin/images/centos7.1"
